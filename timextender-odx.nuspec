<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://docs.chocolatey.org/en-us/create/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>timextender-odx</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>6429.1</version>
    <packageSourceUrl>https://github.com/datadu-de/timextender-odx-choco</packageSourceUrl>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>Frank Wagner</owners>
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>TimeXtender ODX</title>
    <authors>TimeXtender A/S</authors>
    <projectUrl>https://www.timextender.com</projectUrl>
    <!-- There are a number of CDN Services that can be used for hosting the Icon for a package. More information can be found here: https://docs.chocolatey.org/en-us/create/create-packages#package-icon-guidelines -->
    <!-- Here is an example using Githack -->
    <iconUrl>https://rawcdn.githack.com/datadu-de/timextender-odx-choco/1746ebf7f625c50d2a1b4fd2db064333fa4be608/TimeXtender-X-400-squared.png</iconUrl>
    <copyright>2023 TimeXtender A/S</copyright>
    <licenseUrl>https://support.timextender.com/product-updates/timextender-software-license-agreement-736</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <docsUrl>https://support.timextender.com</docsUrl>
    <bugTrackerUrl>https://support.timextender.com</bugTrackerUrl>
    <tags>timextender datawarehouse businessintelligence automation dwh sqlserver azure</tags>
    <summary>TimeXtender automates, orchestrates and documents data solutions. To properly setup your environment for TimeXtender, it’s important to first understand how the platform works. The platform can be understood as an abstraction layer where data is ingested and business logic is defined, independently of the underlying infrastructure. This makes the business logic resilient, and facilitates a "single version of truth", while achieving fluidity in the underlying components. In other words, infrastructure changes can be made quickly (which is often times necessary in an ever-changing technical landscape) without lengthy migrations, rebuilding business logic or compromising the "single version of truth". Learn even more and get up to speed quickly with Training.
    </summary>
    <description>TimeXtender automates, orchestrates and documents data solutions. To properly setup your environment for TimeXtender, it’s important to first understand how the platform works. The platform can be understood as an abstraction layer where data is ingested and business logic is defined, independently of the underlying infrastructure. This makes the business logic resilient, and facilitates a "single version of truth", while achieving fluidity in the underlying components. In other words, infrastructure changes can be made quickly (which is often times necessary in an ever-changing technical landscape) without lengthy migrations, rebuilding business logic or compromising the "single version of truth". Learn even more and get up to speed quickly with Training.
    </description>
    <releaseNotes>https://support.timextender.com/product-updates/timextender-6429-1-1532</releaseNotes>
    <!-- =============================== -->

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>-->
    <!-- chocolatey-core.extension - https://community.chocolatey.org/packages/chocolatey-core.extension -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
  </files>
</package>
